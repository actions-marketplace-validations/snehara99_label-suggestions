{"version":3,"file":"getSSEs.js","sourceRoot":"","sources":["../../../src/api/getSSEs.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAWlC,OAAO,EAAgB,KAAK,EAAE,MAAM,UAAU,CAAC;AAE/C,MAAM,CAAC,KAAK,UAAU,OAAO,CAC3B,QAAmC;IAEnC,MAAM,aAAa,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,CAAC;IAChD,OAAO,KAAK,CAAC,aAAa,CAAC,CAAC;AAC9B,CAAC;AAED,KAAK,UAAU,SAAS,CACtB,QAAqC;IAErC,MAAM,MAAM,GAAG,CAAC,MAAM,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC,IAAI,CAAC;IACpD,IAAI,CAAC,MAAM;QAAE,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;IAC/F,OAAO,MAAmC,CAAC;AAC7C,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport { StreamableMethod } from \"@azure-rest/core-client\";\nimport { EventMessage, toSSE } from \"./sse.js\";\n\nexport async function getSSEs(\n  response: StreamableMethod<unknown>\n): Promise<AsyncIterable<EventMessage>> {\n  const chunkIterator = await getStream(response);\n  return toSSE(chunkIterator);\n}\n\nasync function getStream<TResponse>(\n  response: StreamableMethod<TResponse>\n): Promise<AsyncIterable<Uint8Array>> {\n  const stream = (await response.asNodeStream()).body;\n  if (!stream) throw new Error(\"No stream found in response. Did you enable the stream option?\");\n  return stream as AsyncIterable<Uint8Array>;\n}\n"]}